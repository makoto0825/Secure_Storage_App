# 🔐 Secure Storage App

A secure file storage application with Next.js frontend, Django backend, and Python socket server.

## 🚀 Quick Start

### 📋 Prerequisites
- ⚡ Node.js (v18+)
- 🐍 Python (v3.8+)
- 📦 Git

### ⚙️ Setup Instructions

1. **📥 Clone the repository**
   ```bash
   git clone https://github.com/makoto0825/Secure_Storage_App
   cd Secure_Storage_App
   ```

2. **🎨 Frontend (Next.js) Setup**
   ```bash
   cd frontend
   npm install
   npm run dev
   ```
   - 🌐 Access: http://localhost:3000/
   - 🧪 API test: http://localhost:3000/api-test

3. **⚙️ Backend (Django) Setup**
   ```bash
   cd backend
   python -m venv venv
   venv\Scripts\activate  # Windows
   # source venv/bin/activate  # Mac/Linux
   pip install -r requirements.txt
   python manage.py runserver
   ```
   - 🌐 Access: http://127.0.0.1:8000/

4. **🔌 Socket Server Setup**
   ```bash
   cd server
   python main.py
   ```
   - 🔌 Server runs on port 5001

## 📁 Project Structure

```
Secure_Storage_App/
├── 🎨 frontend/           # Next.js frontend with TypeScript
│   ├── 📂 src/           # Source code
│   ├── 🖼️ public/        # Static assets
│   └── 📦 package.json   # Dependencies
├── ⚙️ backend/           # Django backend
│   ├── 🐍 secure_storage/  # Django project
│   ├── 📋 requirements.txt # Python dependencies
│   └── ⚙️ manage.py       # Django management
├── 🔌 server/            # Python socket server
│   ├── 🚀 main.py        # Server entry point
│   ├── 🛠️ handlers/      # File operation handlers
│   └── 🔧 utils.py       # Utility functions
└── 📖 README.me         # This file
```

## 🛠 Tech Stack

### 🎨 Frontend
- **⚡ Next.js 15.3.5** with TypeScript
- **⚛️ React 19** with Tailwind CSS
- **🔐 Supabase** for authentication and storage
- **🎭 Framer Motion** for animations

### ⚙️ Backend
- **🐍 Django 5.2.4** with REST framework
- **🔐 Supabase Python client** for database operations
- **🔒 Cryptography** for file encryption

### 🔌 Socket Server
- **🐍 Python socket server** for file operations
- **🛠️ Custom handlers** for upload, download, delete, and list operations

## 🔧 Development Commands

### 🎨 Frontend
```bash
cd frontend
npm run dev          # 🚀 Start development server
npm run build        # 📦 Build for production
npm run lint         # 🔍 Run linter
```

### ⚙️ Backend
```bash
cd backend
venv\Scripts\activate  # 🔧 Activate virtual environment
python manage.py runserver  # 🚀 Start Django server
```

### 🔌 Socket Server
```bash
cd server
python main.py       # 🚀 Start socket server
```

## 🔐 Features

- **🔒 Secure file storage** with encryption
- **👤 User authentication** via Supabase
- **⚡ Real-time file operations** via socket server
- **🎨 Modern UI** with responsive design
- **📁 File upload/download/delete** functionality

## ⚠️ Notes

- 🔧 Activate virtual environment before running backend
- 🔌 Socket server must be running for file operations
- ✅ Ensure all three components (frontend, backend, socket server) are running for full functionality
